{"version":3,"sources":["components/Filters/Filters.jsx","components/Search/Search.jsx","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/App/App.jsx","index.jsx"],"names":["Filters","Search","type","placeholder","MovieCard","props","title","poster","releaseDate","rating","shortOverview","overview","split","slice","push","forPoster","className","src","alt","join","defaultProps","MoviesList","movies","loading","size","map","el","original_title","poster_path","release_date","vote_average","id","App","state","error","online","window","navigator","onLine","moviesRequest","a","fetch","ok","json","setState","results","status","this","message","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0VAWeA,G,MAPC,kBACd,+BACE,wCACA,4CCDWC,G,MAFA,kBAAM,uBAAOC,KAAK,OAAOC,YAAY,wB,gBCC9CC,G,MAAY,SAACC,GAAU,IAKnBC,EAAiDD,EAAjDC,MAAOC,EAA0CF,EAA1CE,OAAQC,EAAkCH,EAAlCG,YAAaC,EAAqBJ,EAArBI,OAC9BC,EADmDL,EAAbM,SACbC,MAAM,KAAKC,MAAM,EAAG,IACnDH,EAAcI,KAAK,OAEnB,IAAoBC,EAOpB,OACE,sBAAKC,UAAU,aAAf,UACE,qBAAKA,UAAU,qBAAqBC,KATpBF,EASoCR,EARvC,OAAXA,EACK,KAEH,kCAAN,OAAyCQ,IAKsBG,IAAI,yCACjE,sBAAKF,UAAU,0BAAf,UACE,oBAAIA,UAAU,oBAAd,SAAmCV,IACnC,qBAAKU,UAAU,sBAAf,SACE,4BAAIP,MAEN,mBAAGO,UAAU,mBAAb,SAAiCR,IACjC,qBAAIQ,UAAU,6BAA6Bd,KAAK,OAAhD,UACE,oBAAIc,UAAU,uBAAd,4CACA,oBAAIA,UAAU,uBAAd,+CAEF,mBAAGA,UAAU,uBAAb,SAAqCN,EAAcS,KAAK,eAMhEf,EAAUgB,aAAe,CACvBZ,YAAa,6HACbC,OAAQ,EACRE,SAAU,sHACVJ,OAAQ,MAaKH,QCjDTiB,EAAa,SAAChB,GAAW,IACrBiB,EAAWjB,EAAXiB,OAsBR,OArBoBjB,EAAZkB,QAsBC,cAAC,IAAD,CAAMC,KAAK,QAAQR,UAAU,eAIpC,oBAAIA,UAAU,cAAcd,KAAK,OAAjC,SAvBKoB,EAIcA,EAAOG,KAAI,SAACC,GAAD,OAC5B,oBAAgBV,UAAU,mBAA1B,SACE,cAAC,EAAD,CACEV,MAAOoB,EAAGC,eACVhB,SAAUe,EAAGf,SACbJ,OAAQmB,EAAGE,YACXpB,YAAakB,EAAGG,aAChBpB,OAAQiB,EAAGI,gBANNJ,EAAGK,OAJL,QA4BbV,EAAWD,aAAe,CACxBE,OAAQ,KACRC,SAAS,GAQIF,QC1CMW,E,4MACnBC,MAAQ,CACNX,OAAQ,KACRC,SAAS,EACTW,OAAO,G,EAGTC,OAASC,OAAOC,UAAUC,O,EAM1BC,c,sBAAgB,4BAAAC,EAAA,sEAEKC,MAAM,sGAFX,YAEVnB,EAFU,QAMHoB,GANG,iCAOGpB,EAAOqB,OAPV,OAOZrB,EAPY,OAQZ,EAAKsB,UAAS,SAACX,GAAD,MAAY,CAAEX,OAAQA,EAAOuB,QAAStB,SAAUU,EAAMV,YARxD,wBAUZ,EAAKqB,SAAS,CAAEV,MAAOZ,EAAOwB,SAVlB,4C,kEAHdC,KAAKR,kB,+BAkBG,IACAjB,EAAWyB,KAAKd,MAAhBX,OACAC,EAAYwB,KAAKd,MAAjBV,QACAW,EAAUa,KAAKd,MAAfC,MAIR,OAAKa,KAAKZ,OAKR,0BAASnB,UAAU,MAAnB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACCkB,EACC,cAAC,IAAD,CAAOc,QAAO,sGAAsBd,GAAShC,KAAK,UAElD,cAAC,EAAD,CAAYoB,OAAQA,EAAQC,QAASA,OAVlC,cAAC,IAAD,CAAOrB,KAAK,UAAU8C,QAAQ,gV,GApCVC,IAAMC,WCNvCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ce4bcfd7.chunk.js","sourcesContent":["import './Filters.css';\n\nimport React from 'react';\n\nconst Filters = () => (\n  <ul>\n    <li>Search</li>\n    <li>Rated</li>\n  </ul>\n);\n\nexport default Filters;\n","import './Search.css';\n\nimport React from 'react';\n\nconst Search = () => <input type=\"text\" placeholder=\"Type to search...\" />;\n\nexport default Search;\n","import './MovieCard.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = (props) => {\n  // const {key} = props\n\n  // console.log(props)\n\n  const { title, poster, releaseDate, rating, overview } = props;\n  const shortOverview = overview.split(' ').slice(0, 34);\n  shortOverview.push('...');\n\n  const posterLink = (forPoster) => {\n    if (poster === null) {\n      return null;\n    }\n    return `https://image.tmdb.org/t/p/w500${forPoster}`;\n  };\n\n  return (\n    <div className=\"movie-card\">\n      <img className=\"movie-card__poster\" src={posterLink(poster)} alt=\"Постер\" />\n      <div className=\"movie-card__information\">\n        <h5 className=\"movie-card__title\">{title}</h5>\n        <div className=\"movie-card__raiting\">\n          <p>{rating}</p>\n        </div>\n        <p className=\"movie-card__date\">{releaseDate}</p>\n        <ul className=\"mivie-card__categorys-list\" type=\"none\">\n          <li className=\"movie-card__category\">Драма</li>\n          <li className=\"movie-card__category\">Драма</li>\n        </ul>\n        <p className=\"movie-card__overview\">{shortOverview.join(' ')}</p>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.defaultProps = {\n  releaseDate: 'Дата релиза неизвестна',\n  rating: 0,\n  overview: 'Описание отсутствует',\n  poster: null,\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n\n  poster: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([null])]),\n\n  releaseDate: PropTypes.string,\n  rating: PropTypes.number,\n  overview: PropTypes.string,\n};\n\nexport default MovieCard;\n","import './MoviesList.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Spin } from 'antd';\nimport MovieCard from '../MovieCard/MovieCard';\n\nconst MoviesList = (props) => {\n  const { movies } = props;\n  const { loading } = props;\n\n  const createMovieCards = () => {\n    if (!movies) {\n      return null;\n    }\n\n    const movieCards = movies.map((el) => (\n      <li key={el.id} className=\"movie-list__item\">\n        <MovieCard\n          title={el.original_title}\n          overview={el.overview}\n          poster={el.poster_path}\n          releaseDate={el.release_date}\n          rating={el.vote_average}\n        />\n      </li>\n    ));\n    return movieCards;\n  };\n\n  if (loading) {\n    return <Spin size=\"large\" className=\"spin_scale\" />;\n  }\n\n  return (\n    <ul className=\"movies-list\" type=\"none\">\n      {createMovieCards()}\n    </ul>\n  );\n};\n\nMoviesList.defaultProps = {\n  movies: null,\n  loading: false,\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.oneOf([null])]),\n  loading: PropTypes.bool,\n};\n\nexport default MoviesList;\n","import './App.css';\nimport 'antd/dist/antd.css';\n\nimport React from 'react';\n\nimport { Alert } from 'antd';\nimport Filters from '../Filters/Filters';\nimport Search from '../Search/Search';\nimport MoviesList from '../MoviesList/MoviesList';\n\nexport default class App extends React.Component {\n  state = {\n    movies: null,\n    loading: true,\n    error: false,\n  };\n\n  online = window.navigator.onLine;\n\n  componentDidMount() {\n    this.moviesRequest();\n  }\n\n  moviesRequest = async () => {\n    // this.setState(state => ({loading: !state.loading}));\n    let movies = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=c33f54366ccf34ec81775c2d46bea63e&query=star wars`\n    );\n    // console.log(movies)\n    if (movies.ok) {\n      movies = await movies.json();\n      this.setState((state) => ({ movies: movies.results, loading: !state.loading }));\n    } else {\n      this.setState({ error: movies.status });\n    }\n    // console.log(this.state)\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { loading } = this.state;\n    const { error } = this.state;\n\n    // console.log(this.online)\n\n    if (!this.online) {\n      return <Alert type=\"warning\" message=\"Ваш интернет приказал долго жить (Отсутствует соединение сети)\" />;\n    }\n\n    return (\n      <section className=\"app\">\n        <Filters />\n        <Search />\n        {error ? (\n          <Alert message={`Произошла ошибка ${error}`} type=\"error\" />\n        ) : (\n          <MoviesList movies={movies} loading={loading} />\n        )}\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}